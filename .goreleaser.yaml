before:
  hooks:
    - go mod tidy
builds:
  - id: ls
    main: ./ls
    binary: ls
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
  - id: grep
    main: ./grep
    binary: grep
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
  - id: pwd
    main: ./pwd
    binary: pwd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
  - id: whoami
    main: ./whoami
    binary: whoami
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
  - id: yes
    main: ./yes
    binary: yes
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
  - id: echo
    main: ./echo
    binary: echo
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

upx:
  - enabled: true
    compress: best
    lzma: true
    goos:
      - "linux"
      - "darwin"

archives:
  - format: tar.gz
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
    - goos: windows
      format: zip
    files:
      - LICENSE
      - README.md
snapshot:
  name_template: "{{ .Version }}"
changelog:
  use: github
  sort: asc
  abbrev: 0
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: "Bug fixes"
      regexp: '^.*?bug(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: Others
      order: 999
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - 'typo'
    include:
      - "^feat:"
      - "^bug:"